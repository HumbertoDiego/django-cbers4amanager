# Generated by Django 4.0.4 on 2022-07-15 14:39

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComposicaoRGB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_base', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('rgb', models.FilePathField(blank=True, help_text='Este arquivo será criado após escolher a opção "Começar composição das linhas selecionadas".', match='(.*)RGB.tif', null=True, path='D:\\devs\\django-cbers4amanager\\uploads\\rgbs')),
                ('bounds', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('finalizado', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name': 'Composição RGB',
                'verbose_name_plural': '2.1) Composições RGB',
            },
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=500, unique=True)),
                ('nome', models.CharField(blank=True, max_length=500, null=True)),
                ('nome_base', models.CharField(blank=True, max_length=500, null=True)),
                ('tipo', models.CharField(blank=True, choices=[('nir', 'Infravermelho Próximo'), ('red', 'Vermelho'), ('green', 'Verde'), ('blue', 'Azul'), ('pan', 'Pancromática'), ('', 'Indefinido')], default='', max_length=5, null=True)),
                ('iniciado_em', models.DateTimeField(blank=True, null=True)),
                ('terminado_em', models.DateTimeField(blank=True, null=True)),
                ('content_length', models.BigIntegerField(blank=True, null=True)),
                ('progresso', models.BigIntegerField(blank=True, null=True)),
                ('arquivo', models.FilePathField(blank=True, null=True, path='D:\\devs\\django-cbers4amanager\\uploads\\bandas')),
                ('bounds', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('finalizado', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name': 'Download',
                'verbose_name_plural': '1) Downloads',
            },
        ),
        migrations.CreateModel(
            name='INOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inom', models.CharField(max_length=20, unique=True)),
                ('mi', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mapa Índice')),
                ('bounds', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('melhor_imagem', models.FilePathField(blank=True, match='(.*).tif', max_length=300, null=True, path='D:\\devs\\django-cbers4amanager\\uploads\\pansharp')),
            ],
            options={
                'verbose_name': 'Área de Interesse',
                'verbose_name_plural': 'Áreas de Interesse',
            },
        ),
        migrations.CreateModel(
            name='INOMClippered',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, unique=True)),
                ('recorte_rgb', models.FilePathField(blank=True, help_text='Este arquivo será criado após escolher a opção "Começar recorte RGB das linhas selecionadas". ', match='(.*)RGB.tif', max_length=300, null=True, path='D:\\devs\\django-cbers4amanager\\uploads\\recortes')),
                ('recorte_pancromatica', models.FilePathField(blank=True, help_text='Este arquivo será criado após escolher a opção "Começar recorte PAN das linhas selecionadas".', match='(.*)PAN.tif', max_length=300, null=True, path='D:\\devs\\django-cbers4amanager\\uploads\\recortes')),
                ('area_util', models.FloatField(blank=True, help_text='Este dado será computado após escolher a opção "Começar recorte RGB das linhas selecionadas". <br>Equivale ao "STATISTICS_VALID_PERCENT" mínimo entre as bandas do Recorte RGB, obtido pelo comando <i>gdalinfo recorte.tif -stats</i>.', null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Área com dados (%)')),
                ('cobertura_nuvens', models.FloatField(blank=True, help_text='Este dado será computado após escolher a opção "Começar recorte RGB das linhas selecionadas". <br>Equivale ao "STATISTICS_VALID_PERCENT" da classificação das nuvens, obtido pelo comando <i>gdalinfo nuvens.tif -stats</i>.', null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Área de nuvens (%)')),
                ('finalizado', models.BooleanField(blank=True, default=False, null=True)),
                ('inom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbers4amanager.inom')),
                ('pancromatica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbers4amanager.download', verbose_name='Pancromática')),
                ('rgb', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbers4amanager.composicaorgb')),
            ],
            options={
                'verbose_name': 'Recorte RGB/PAN',
                'verbose_name_plural': '3) Recortes RGB/PAN',
            },
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30, unique=True)),
                ('bounds', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Pansharpened',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pansharp', models.FilePathField(blank=True, help_text='Este arquivo será criado após escolher a opção "Começar Fusão RGB/PAN das linhas selecionadas". ', match='(.*).tif', max_length=300, null=True, path='D:\\devs\\django-cbers4amanager\\uploads\\pansharp')),
                ('finalizado', models.BooleanField(blank=True, default=False, null=True)),
                ('insumos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbers4amanager.inomclippered')),
            ],
            options={
                'verbose_name': 'Fusão RGB/PAN',
                'verbose_name_plural': '4) Fusão RGB/PAN',
            },
        ),
        migrations.AddField(
            model_name='inom',
            name='projeto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbers4amanager.projeto'),
        ),
        migrations.AddField(
            model_name='composicaorgb',
            name='blue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='set', to='cbers4amanager.download'),
        ),
        migrations.AddField(
            model_name='composicaorgb',
            name='green',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='green', to='cbers4amanager.download'),
        ),
        migrations.AddField(
            model_name='composicaorgb',
            name='red',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='red', to='cbers4amanager.download'),
        ),
    ]
